[{"content":"","date":"7 February 2023","permalink":"/personal-blog/","section":"","summary":"","title":""},{"content":"","date":"7 February 2023","permalink":"/personal-blog/tags/concurrency/","section":"Tags","summary":"","title":"concurrency"},{"content":"Go routines are very useful when you want the program to run fast. However, do not mistake concurrency with parallelism.\nTo create a goroutine, simple use go keyword\n1 2 3 4 5 func aFunc() { fmt.Println(\u0026#34;Hello World\u0026#34;) } go aFunc() ","date":"7 February 2023","permalink":"/personal-blog/blogs/concurrency/","section":"Personal Blogs","summary":"Go routines are very useful when you want the program to run fast. However, do not mistake concurrency with parallelism.\nTo create a goroutine, simple use go keyword\n1 2 3 4 5 func aFunc() { fmt.","title":"Concurrency with Goroutines"},{"content":"","date":"7 February 2023","permalink":"/personal-blog/tags/go-routines/","section":"Tags","summary":"","title":"go-routines"},{"content":"","date":"7 February 2023","permalink":"/personal-blog/tags/golang/","section":"Tags","summary":"","title":"golang"},{"content":" Posting interesting and fun articles about programming, software and cyber security topics as frequently as I can. ","date":"7 February 2023","permalink":"/personal-blog/blogs/","section":"Personal Blogs","summary":" Posting interesting and fun articles about programming, software and cyber security topics as frequently as I can. ","title":"Personal Blogs"},{"content":"Object Oriented Programming is a little different in Go. Instead of class, Go has struct which is like an object.\nCreate a struct\u003e Create a struct First you create a struct object like this:\n1 2 3 4 type Person struct { name string age int } Write the reciever function\u003e Write the reciever function Then, you pass the struct in a function like this:\n1 2 3 4 func (p *Person) addInfo(name string, age int) { p.name = name p.age = age } Finally, calling the reciever func using the struct\u003e Finally, calling the reciever func using the struct Then you can call the function using the struct as a reciever like this:\nfunc main() { p = Person{} p.addInfo(\u0026#34;Wai Yan\u0026#34;, 27) // output: {Wai Yan 27} fmt.Println(p) } Why use reciever function?\u003e Why use reciever function? The function can only be called using dot operator with p struct which is in a way an object.\n","date":"7 February 2023","permalink":"/personal-blog/blogs/reciever-func/","section":"Personal Blogs","summary":"Object Oriented Programming is a little different in Go. Instead of class, Go has struct which is like an object.\nCreate a struct\u003e Create a struct First you create a struct object like this:","title":"Reciever function in Go"},{"content":"","date":"7 February 2023","permalink":"/personal-blog/tags/reciever-func/","section":"Tags","summary":"","title":"reciever-func"},{"content":"","date":"7 February 2023","permalink":"/personal-blog/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"5 February 2023","permalink":"/personal-blog/tags/docs/","section":"Tags","summary":"","title":"docs"},{"content":"","date":"5 February 2023","permalink":"/personal-blog/tags/hugo/","section":"Tags","summary":"","title":"hugo"},{"content":"This is fun and quite easy to use. I love it.\n","date":"5 February 2023","permalink":"/personal-blog/blogs/blog/","section":"Personal Blogs","summary":"This is fun and quite easy to use. I love it.","title":"My First Blog"},{"content":"I am learning more and more to build my personal blog.\n","date":"5 February 2023","permalink":"/personal-blog/blogs/blog2/","section":"Personal Blogs","summary":"I am learning more and more to build my personal blog.","title":"My Second Blog"},{"content":"Intro\u003e Intro Education\u003e Education Work Experience\u003e Work Experience Tech\u003e Tech Skills\u003e Skills ","date":"1 January 0001","permalink":"/personal-blog/about/","section":"","summary":"Intro\u003e Intro Education\u003e Education Work Experience\u003e Work Experience Tech\u003e Tech Skills\u003e Skills ","title":"About Me"},{"content":"","date":"1 January 0001","permalink":"/personal-blog/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/personal-blog/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"This is the Contact page.\n-\n","date":"1 January 0001","permalink":"/personal-blog/contact/","section":"","summary":"This is the Contact page.\n-","title":"Contact"},{"content":"","date":"1 January 0001","permalink":"/personal-blog/series/","section":"Series","summary":"","title":"Series"}]